#!/usr/bin/env node

'use strict';

var mongoose = require('mongoose');
var db = mongoose.connect('mongodb://tuokki:samout@dharma.mongohq.com:10038/app21156008');
var vault = require('./../app/models/vault');
var user = require('./../app/models/user');
var _ = require('nimble');

var holvit = mongoose.model('Vault', vault.vaultSchema);
var kayttajat = mongoose.model('User', user.userSchema);	

var ships = new Array();

_.series([
    function (callback) {
        setTimeout(function () {
            holvit.find({}, function (err, vaults) {

            	
			    vaults.forEach(function(vault) {

					var today = new Date();

					// jos ei ryöstetty ja rahaa holvissa ja aika umpeutunut
					// siirrä rahat omistajalle ja poista holvi

					if(today.getTime() > vault.end_date.getTime()){
						console.log('Käsitellään holvi: ' + vault.title + ', jossa rahaa: ' +
							vault.vault_bitcoin_amount + 'mBTC');

							var ship = new Object();
							ship.to = vault.user;
							ship.money = vault.vault_bitcoin_amount;

							ships.push(ship);

							console.log('poistetaan holvi');
							vault.remove();
							
					}

			    });

			   

			});
            callback();
        }, 0);
    },
    function (callback) {
        setTimeout(function () {
            kayttajat.find({}, function (err, users) {

			    users.forEach(function(user) {

			    	for(var i in ships){
				  
				    	if(user._id.toString() === ships[i].to.toString()){

				    		user.balance = user.balance + ships[i].money;
				    		user.save();
				    		console.log('user:'+user.username+' got money ' + ships[i].money);
				    	}
				    	
			    	}

			    });

			    console.log('Batch job end');
			    process.exit(0);

			});
			callback();
        }, 0);
    }
]);



