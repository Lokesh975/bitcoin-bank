#!/usr/bin/env node

'use strict';

/**
 * Module dependencies.
 */
var mongoose = require('mongoose'),
    Vault = mongoose.model('Vault');

var config = require('./config/config'),
    auth = require('./config/middlewares/authorization'),
    mongoose = require('mongoose');

//Bootstrap db connection
var db = mongoose.connect(config.db);

var models_path = __dirname + '/app/models';
var walk = function(path) {
    fs.readdirSync(path).forEach(function(file) {
        var newPath = path + '/' + file;
        var stat = fs.statSync(newPath);
        if (stat.isFile()) {
            if (/(.*)\.(js$|coffee$)/.test(file)) {
                require(newPath);
            }
        } else if (stat.isDirectory()) {
            walk(newPath);
        }
    });
};

walk(models_path);

Vault.find({}, function (err, vaults) {
    vaults.forEach(function(vault) {

    	var oneDay = 24*60*60*1000;
		var today = new Date();

		var diffDays = Math.round(Math.abs((today.getTime() - vault.end_date.getTime())/oneDay));
		diffDays++;

		// jos ei ryöstetty ja rahaa holvissa ja aika umpeutunut
		// siirrä rahat omistajalle ja poista holvi

		if(diffDays < 0){
			console.log('holvi: ' + vault.title + ' poistetaan ja rahat palautetaan korkoineen');
		}

    });

});

console.log('eräajo poistaa holveja');